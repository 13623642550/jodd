# Jodd TODOs

## General Tasks
gen.todo

+ clone myself.
+ Game over?
	"Every once in a while, I take my head out of the clouds and do a reality check."

## Core
core.todo

+ Add smart download in `NetUtil`
	This would have some downloading options to tweak download better.
+ Add efficient text searches
	Check various algorithms, like BM etc.
+ Add more TypeConverters! @v3.4.8 @done
+ Check `FileUtil.move`/`copy dir`/`file` variants to be more performant
	Try to see which variant is the fastest one. Noticed a slow execution in @sitegenerator
+ Update ReferenceMap @done @v3.5
+ Add `FileNameUtil.calculateRelativePath` (see @liferay) @3.6

## Documentation
doc.todo

+ add blog, like I have time :(
+ improve SEO
+ main page for each tool must be better @next

###	SiteGenerator
sitegen.todo

+ add global props to javascript
+ sitemap generator
+ description meta tag add

## Lagarto/Jerry
lagarto.todo

+ Add alternative strict HTML parser, that produces browser-quality code @hot @done
+ Think about removing circular dep Node <-> Document
+ Find JFLex faster alternative - in fact, manual parsing may be faster?? see HtmlTag @v3.6 @done
+ Use new faster parser for the form tag !!! @v3.6 @done
+ Make Node api for adding Nodes more user friendly @next

## BeanUtil
beanutil.todo

+ Add `PopertyDescriptor` @v3.4.9 @done
+ Join maps of public and all methods! @v3.4.9 @done
+ Add settings in the `ClassDescriptor` so its possible to change the behavior. @v3.4.9 @done
+ Remove 2 introspector implementations @v3.4.9 @done
+ Dont use introspector from JoddBean.* but add a field in BeanProperty @v3.4.9 @done
+ Move all init to collections (from ClassDescriptor to Fields etc) @v3.4.9 @done
+ Add abstract descriptor class @v3.4.9 @done

## Props
props.todo

+ Add new property "ignoreMacros" @v3.4.5 @done

## JSON
json.todo

+ Add factories in `JsonParser` for various types.

## Petite
petite.todo

+ remove default scope configuration as totally not needed @v3.5 @done

## Props-plugin
pp.todo

+ Add `+=` operator
+ Add `<=` operator
+ Check when categories are listed in values, do not recognize them as categories but test
		Categories must start on empty or whitespaced line

## Madvoc
madvoc.todo

+ Action methods with arguments @done @v3.5.1
+ Add Convertes, that convert input text automatically
		For example, convert "1,473.00" into "1473"
+ MadvocServletFilter, consume action path, like load static content @tbd
+ Check AnnotatedFieldInterceptor, how it works @test
+ More flexible ActionMethodParser, i.e. point where action path is build @tbd
		For example, it may choose if extension is "json" or not based on class name.
+ Add JSONResult(returnCode, jsonString) @soon @review
+ DefaultResult as a class, not as a string. @v3.6.1 @done(2014-09-17)
+ Why Decora can not handle the direct output? @v3.6.1
+ Context!!! @v3.6.1
+ Cache results for ServletDispatcherResult#targetExist to speed up @done

## EMail
email.todo

+ Add callback method for receive(), so users may control if there is an exception and continue fetching if there is one. @next
+ Add UploadFile so user can download email attachments directly to e.g. disk instead to memory. @next

## Cache
cache.todo

+ LFU, add optional count reduction
+ LFU & LRU, add optional percentage reduction: eg, delete 25% od cache
+ Add caches on method level, annotation based.
		Each cache has an id, each one can be evicted, use annotations or manual config
+ Add Madvoc filter for storing caching response for some time
		Configurable, eg. 1 cache setting per actionString (class#method) or from additional annotation etc.

## JTX
jtx.todo

+ Add 'Rollback on' feature… that does rollback only on certain exception types.
+ Add Thread timeout in separate class
+ How to explicitly specify TX scope in annotation @tbd
+ Check nested TX, once again @test

## Proxetta
proxetta.todo

+ Add statistics: number of proxified methods etc.
+ Add unique interface over all 3 proxy types, so they can be combined! @hot

## DbOom
db.todo

+ LoadById, load values into existing instance
+ Generic finder method. Try to detect method arguments using MethRef? @done
+ Add batch update
+ Add matcher for `match()` method
+ Add more matching wildcards for set, update etc. For now you can update only full object, and enable to update non-null parts, too. @next
+ Make constants  like`COLS_INCLUDE_ALL` to be `enum`.

## MethRef
methref.todo

+ Return property name instead of method name. @done

## Joy
joy.todo

+ Localization arguments, {0}, {1}…
+ Don't encode text tags in resource bundles
+ Pager - refactor to be more user friendly when user has to write custom code
+ AppCore, add optional scanning, so to allow manual registration @done
+ Jspp with tag body
+ Jspp.processAll()
		Process all files in target folder, enable debug mode in WebApp.